percentage_increase_time <- 100*(exp(alpha_1) - 1)
percentage_increase_uspres <- 100*(exp(alpha_2) - 1)
percentage_increase_chinaemp <- 100*(exp(alpha_3) - 1)
percentage_increase_dalilama <- 100*(exp(alpha_4) - 1)
percentage_increase_japanEmp <- 100*(exp(alpha_5) - 1)
percentage_increase_usPresXtime <- 100*(exp(alpha_6) - 1)
percentage_increase_chinaempXtime <- 100*(exp(alpha_7) - 1)
percentage_increase_dalialamaXtime <- 100*(exp(alpha_8) - 1)
percentage_increase_japanempXtime <- 100*(exp(alpha_9) - 1)
for (i in 1:177) {
# Predictive distribution of age at the new values
beta_pred[i] <- beta_0 + beta_1*time_pred[i] + beta_2*is_uspres_pred[i] + beta_3*is_chinaemp_pred[i] +
beta_4*is_dalailama_pred[i] + beta_5*is_japanemp_pred[i] + beta_6 * is_uspresXime_pred[i] +
beta_7 * is_chinaempXtime_pred[i] + beta_8 * is_dalialamaXtime_pred[i] + beta_9 * is_japanempXtime_pred[i]
# New values need to be supplied
t_median[i] <- pow(log(2) * exp(-beta_pred[i]), 1 / r)
# Values of current_age need to be provided
mu_pred[i] <- exp(beta_pred[i])
start[i] = ifelse(censored[i] == 1, present_length[i], 0)
survival_pred[i] ~ dweib(r, mu_pred[i]) %_% T(start[i], upper_length)
# Take into account the current pontificate length
# Also specify a sensible upper bound
# time_predictive <- present_length + survival_pred
# Work also with age
}
}
# Prepare the data
pred_leaders <- leaders
time_births <- pred_leaders$time
time_pred <- time_births - mean(leaders$time)
# indicator variables (baseline = pope; 2-uspres, 3-chinaemp, 4-dalailama, 5-japanemp)
is_uspres_pred <- pred_leaders$is_uspres
is_chinaemp_pred <- pred_leaders$is_chinaemp
is_dalailama_pred <- pred_leaders$is_dalailama
is_japanemp_pred <- pred_leaders$is_japanemp
is_uspresXime_pred <- pred_leaders$is_uspres * pred_leaders$time
is_chinaempXtime_pred <- pred_leaders$is_chinaemp * pred_leaders$time
is_dalialamaXtime_pred <- pred_leaders$is_dalailama * pred_leaders$time
is_japanempXtime_pred <- pred_leaders$is_japanemp * pred_leaders$time
present_length <- pred_leaders$Age.Event
upper_length <- 100
data_leaders_first_approach <- list("n",
"censored",
"survival",
"censoring_limits",
"x_1",
"x_2",
"x_3",
"x_4",
'x_5',
'x_6',
'x_7',
'x_8',
'x_9',
"is_uspres_pred",
"is_chinaemp_pred",
"is_dalailama_pred",
"is_japanemp_pred",
'is_uspresXime_pred',
'is_chinaempXtime_pred',
'is_dalialamaXtime_pred',
'is_japanempXtime_pred',
"time_pred",
"present_length",
"upper_length")
Bayesian_leaders_first_approach <- jags(data = data_leaders_first_approach,
parameters.to.save = c("beta_0",
"beta_1",
"beta_2",
"beta_3",
"beta_4",
"beta_5",
"beta_6",
"beta_7",
"beta_8",
"beta_9",
"alpha_0",
"alpha_1",
"alpha_2",
"alpha_3",
"alpha_4",
"alpha_5",
"alpha_6",
"alpha_7",
"alpha_8",
"alpha_9",
"percentage_increase_time",
"percentage_increase_uspres",
"percentage_increase_chinaemp",
"percentage_increase_dalilama",
"percentage_increase_japanEmp",
'percentage_increase_usPresXtime',
'percentage_increase_chinaempXtime',
'percentage_increase_dalialamaXtime',
'percentage_increase_japanempXtime',
"r",
"t_median",
"survival_pred"),
n.iter = 20000,
n.burnin = 5000,
n.chains = 3,
model.file = first_approach)
leader_indices = which(leaders$Name %in% c("Francis", "Barack Obama","14th Dalai Lama (Tenzin Gyatso)", "Naruhito (Emperor Reiwa)"))
leader_predictions_final = predictions[,leader_indices]
prob_dl_outlives_francis = mean(leader_predictions_final[, 3] > leader_predictions_final[, 1] )
prob_obama_outlives_naruhito = mean(leader_predictions_final[, 2] > leader_predictions_final[, 4])
cat("Probability that 14th Dalai Lama (Tenzin Gyatso) outlives Pope Francis: ", prob_dl_outlives_francis, "\n")
cat("Probability that Barack Obama outlives Naruhito (Emperor Reiwa): ", prob_obama_outlives_naruhito, "\n")
Bayesian_leaders_first_approach_diagnostics <- jags(data = data_leaders_first_approach,
parameters.to.save = c("beta_0",
"beta_1",
"beta_2",
"beta_3",
"beta_4",
"beta_5",
"beta_6",
"beta_7",
"beta_8",
"beta_9",
"alpha_0",
"alpha_1",
"alpha_2",
"alpha_3",
"alpha_4",
"alpha_5",
"alpha_6",
"alpha_7",
"alpha_8",
"alpha_9",
"percentage_increase_time",
"percentage_increase_uspres",
"percentage_increase_chinaemp",
"percentage_increase_dalilama",
"percentage_increase_japanEmp",
'percentage_increase_usPresXtime',
'percentage_increase_chinaempXtime',
'percentage_increase_dalialamaXtime',
'percentage_increase_japanempXtime',
"r",
"t_median",
"survival_pred"),
n.iter = 20000,
n.burnin = 0,
n.chains = 3,
model.file = first_approach)
# Traceplots (Note: traceplots were generated from running the model with n.burnin = 0)
tps <- traceplot(Bayesian_leaders_first_approach_diagnostics$BUGSoutput, mfrow=c(2,4), varname = c("beta_0", "beta_1", "beta_2", "beta_3", "beta_4", "beta_5", "beta_8"))
dead_leaders_indices <- which(leaders$Censored == 0)
predictions <- Bayesian_leaders_first_approach$BUGSoutput$sims.list$survival_pred
std_residuals <- c()
for (i in dead_leaders_indices){
std_residual <- (leaders$Age.Event[i] - mean(predictions[,i]))/(sd(predictions[,i]))
std_residuals <- c(std_residuals, std_residual)
}
ggplot() +
geom_histogram(aes(std_residuals), bins = 20)
load("~/Desktop/Leaders.Rdata") #change this to point to wherever Leaders.Rdata is located on your personal computer
head(leaders, 3)
load("~/Desktop/Leaders.Rdata") #change this to point to wherever Leaders.Rdata is located on your personal computer
head(leaders, 3)
if (!require(tidyverse)) {
install.packages('tidyverse')
}
if (!require(bayestestR)) {
install.packages('bayestestR')
}
tryCatch(
if (!require(R2jags)) {
install.packages('R2jags')
},
error = function(e) {
cat('Download R2jags package directly from https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/')})
library(tidyverse)
library(R2jags)
library(bayestestR)
load("~/Desktop/Leaders.Rdata") #change this to point to wherever Leaders.Rdata is located on your personal computer
head(leaders, 3)
ggplot(data = leaders, aes(x = Type)) + geom_bar() + labs(title = 'Histogram of Types of Leaders')+theme(plot.title = element_text(hjust = 0.5)) + xlab('Leader Type') + ylab('Frequency')
ggplot(data = leaders, aes(x = Type)) + geom_bar() + labs(title = 'Histogram of Types of Leaders')+theme(plot.title = element_text(hjust = 0.5)) + xlab('Leader Type') + ylab('Frequency')
load("~/Desktop/Leaders.Rdata")
load("~/Desktop/Leaders.Rdata")
knitr::opts_chunk$set(echo = TRUE)
load("~/Desktop/Leaders.Rdata")
knitr::opts_chunk$set(echo = TRUE)
load("~/Desktop/Leaders.Rdata")
ggplot(data = leaders, aes(x = Type)) + geom_bar() + labs(title = 'Histogram of Types of Leaders')+theme(plot.title = element_text(hjust = 0.5)) + xlab('Leader Type') + ylab('Frequency')
library(ggplot2)
p1 <- ggplot(data = leaders, aes(x = time)) + geom_histogram(bins=50) +theme(plot.title = element_text(hjust = 0.5, size=15))+ xlab('Birth Date in Centuries from 1300') + labs(title = 'Number of Observations by Century', caption = "Histogram of frequency of birth date for all leaders in the dataset")
p2 <- ggplot(data = leaders, aes(x = time, y = Age.Event, color = Type)) + geom_point() + xlab('Birth Date in Centuries since 1300') + labs(title = 'Age at Event Time by Century by Leader Type') + theme(plot.title = element_text(hjust = 0.5, size=15))
plot_grid(p1,p2)
p1 <- ggplot(data = leaders, aes(x = time)) + geom_histogram(bins=50) +theme(plot.title = element_text(hjust = 0.5, size=15))+ xlab('Birth Date in Centuries from 1300') + labs(title = 'Number of Observations by Century', caption = "Histogram of frequency of birth date for all leaders in the dataset")
p2 <- ggplot(data = leaders, aes(x = time, y = Age.Event, color = Type)) + geom_point() + xlab('Birth Date in Centuries since 1300') + labs(title = 'Age at Event Time by Century by Leader Type') + theme(plot.title = element_text(hjust = 0.5, size=15))
plot_grid(p1,p2)
p1 <- ggplot(data = leaders, aes(x = time)) + geom_histogram(bins=50) +theme(plot.title = element_text(hjust = 0.5))+ xlab('Birth Date in Centuries from 1300') + labs(title = 'Number of Observations by Century', caption = "Histogram of frequency of birth date for all leaders in the dataset")
p2 <- ggplot(data = leaders, aes(x = time, y = Age.Event, color = Type)) + geom_point() + xlab('Birth Date in Centuries since 1300') + labs(title = 'Age at Event Time by Century by Leader Type') + theme(plot.title = element_text(hjust = 0.5))
par(mfrow=c(1,2))
p1
p2
ggplot(data = leaders, aes(x = Type)) + geom_bar() + labs(title = 'Histogram of Types of Leaders', caption = "Figure 1.1 Histogram of frequency of each type of leader in the dataset")+theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust=0.5)) + xlab('Leader Type') + ylab('Frequency')
library(ggplot2)
library(cowplot)
quantiles = quantile(leaders$Age.Event, c(0.025, 0.5, 0.975))
ggplot(data = leaders, aes(x = Age.Event)) + geom_histogram(binwidth = 1) +
labs(title = 'Histogram of Age at Failure') + theme(plot.title = element_text(hjust = 0.5, size=15)) +
xlab('Age') + ylab('Frequency') +
annotate(geom="text", x=quantiles+5, y=12, label=names(quantiles)) +
annotate(geom="text", x=quantiles+5, y=11, label=round(quantiles, 3)) +
geom_vline(xintercept=quantiles, linetype = "longdash")
leaders_by_type = leaders %>% group_by(Type) %>% summarize(quantiles=quantile(Age.Event, c(0.025, 0.5, 0.975)))
ggplot(data = leaders, aes(x = Age.Event, fill = Type)) + geom_histogram() +
labs(title = 'Histogram of Age.Event by leaders', caption = "Fig 1.5 Histogram of Age.Event categorized by each later") + theme(plot.title = element_text(hjust = 0.5, size=15), plot.caption = hjust(0.5)) +
xlab('Age') + ylab('Frequency') +
geom_vline(data = leaders_by_type, aes(xintercept = quantiles)) +
geom_text(data= leaders_by_type, aes(x=quantiles+9,y=13,label=names(quantiles)), size=2) +
geom_text(data= leaders_by_type, aes(x=quantiles+9,y=10,label=round(quantiles, 1)),size=2) +
facet_wrap(~Type)
leaders_by_type = leaders %>% group_by(Type) %>% summarize(quantiles= quantile(Age.Event, c(0.025, 0.5, 0.975)))
ggplot(data = leaders, aes(x = Age.Event, fill = Type)) + geom_histogram() +
labs(title = 'Histogram of Age.Event by leaders', caption = "Fig 1.5 Histogram of Age.Event categorized by each later") + theme(plot.title = element_text(hjust = 0.5, size=15), plot.caption = element_text(hjust=0.5)) +
xlab('Age') + ylab('Frequency') +
geom_vline(data = leaders_by_type, aes(xintercept = quantiles)) +
geom_text(data= leaders_by_type, aes(x=quantiles+9,y=13,label=names(quantiles)), size=2) +
geom_text(data= leaders_by_type, aes(x=quantiles+9,y=10,label=round(quantiles, 1)),size=2) +
facet_wrap(~Type)
quantiles = quantile(leaders$Age.Event, c(0.025, 0.5, 0.975))
ggplot(data = leaders, aes(x = Age.Event)) + geom_histogram(binwidth = 1) +
labs(title = 'Histogram of Age.Event', caption = "Figure 1.4 Histogram of Age.Event (lifespan) for all leaders") + theme(plot.title = element_text(hjust = 0.5, size=15),plot.caption = element_text(hjust=0.5)) +
xlab('Age') + ylab('Frequency') +
annotate(geom="text", x=quantiles+5, y=12, label=names(quantiles)) +
annotate(geom="text", x=quantiles+5, y=11, label=round(quantiles, 3)) +
geom_vline(xintercept=quantiles, linetype = "longdash")
pwd
knitr::opts_chunk$set(echo = TRUE)
data <- data.frame(read.csv(file = 'data/data.csv'))
data_w_genres <- data.frame(read.csv(file = 'data/data_w_genres.csv'))
data_by_year <- data.frame(read.csv(file ='data/data_by_year.csv'))
data %>% view()
if (!require(tidyverse)) {
install.packages('tidyverse')
}
library(tidyverse)
data %>% view()
hist(data$popularity)
hist(data$year)
hist(data$explicit)
plot(data$explicit, data$year)
hist(data$explicit)
knitr::opts_chunk$set(echo = TRUE)
install.packages("citr")
citr:::insert_citation()
data_w_genres %>% view()
data %>% view()
data
data_w_genre
data_w_genres
if (!require(tidyverse)) {
install.packages('tidyverse')
}
if (!require(xlsx)) {
install.packages('xlsx')
}
library(tidyverse)
library('xlsx')
library(xlsx)
#Figure 2.1 (Table of variable descriptions)
var_descr_table <- read_file(file = 'variable_table.xlsx',header = TRUE)
#Figure 2.1 (Table of variable descriptions)
var_descr_table <- read_file(file = 'variable_table.xlsx')
#Figure 2.1 (Table of variable descriptions)
var_table <- read_file(file = 'variable_table.xlsx')
var_table
#Figure 2.1 (Table of variable descriptions)
var_table <- data.frame(read_file(file = 'variable_table.xlsx'))
var_table
#Figure 2.1 (Table of variable descriptions)
var_table <- read.table(file = 'variable_table.xlsx',header=TRUE)
#Figure 2.1 (Table of variable descriptions)
var_table <- read.csv(file = 'variable_table.xlsx',header=TRUE)
#Figure 2.1 (Table of variable descriptions)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table
var_table[-c("X","X.1")]
var_table[-c("X","X.1"),]
#Figure 2.1 (Table of variable descriptions)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table[-c("X","X.1"),]
#Figure 2.1 (Table of variable descriptions)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table[-c(X,X.1),]
#Figure 2.1 (Table of variable descriptions)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table[-c(4,5),]
var_table
var_table[-c(4,5),]
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
kable(var_table[-c(4,5),])
install.packages("kableExtra")
library("kableExtra")
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
kable(var_table[-c(4,5),])
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- var_table[-c(4,5),]
kable(var_table1)
var_table1
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- var_table[,-c(4,5)]
var_table1
kable(var_table1)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- var_table[,-c(4,5)]
kable(var_table1,  table. attr = "style='width:30%;'")
library("kableExtra")
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(4,5)])
kable(var_table1)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(4,5)])
kable(var_table1)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(4,5)])
as_image(kable(var_table1), width = 8)
kable(var_table1, width = 8)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(4,5)])
kable(var_table1)  %>%
kable_styling(latex_options="scale_down")
var_table
var_table1
x_i <- seq(1,19)
x_i
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(2,4,5)])
kable(var_table1)  %>%
column_spec(2, width = "13cm")
var_tavble1$x_i <- seq(1,19)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(2,4,5)])
var_table1$x_i <- seq(1,19)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(2,4,5)])
var_table1$x <- seq(1,17)
var_table1 <- var_table1[,c(3,1,2)]
kable(var_table1)  %>%
column_spec(3, width = "12cm")
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(2,4,5)])
var_table1$x <- seq(1,17)
var_table1 <- var_table1[,c(3,1,2)]
kable(var_table1, b)  %>%
column_spec(3, width = "12cm")
n
#add genres to the dataset
n <- nrow(data)
n
#add genres to the dataset
n <- nrows(data)
#load the data
data <- data.frame(read.csv(file = 'data/data.csv'))
data_w_genres <- data.frame(read.csv(file = 'data/data_w_genres.csv'))
#add genres to the dataset
n <- nrow(data)
n
data
data[1,2]
data[2,2]
for (artist in data[2,2]) {
print(artist)
}
count <- 0
for (artist in data[2,2]) {
count <- count + 1
}
count
class(data[2,2])
data[2,2]
library(ggplot2)
popularity_hist <- ggplot(data, aes(x=Popularity)) + geom_histogram()
popularity_hist
data
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram()
popularity_hist
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram() +labs(title= 'Count of songs based on their popularity score')
ggsave('popularity_hist.png', plot = popularity_hist)
popularity_hist
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram() +
labs(title= 'Count of songs based on their popularity score') +
theme(plot.title = element_text(hjust = 0.5))
popularity_hist
ggsave('popularity_hist.png', plot = popularity_hist)
library("kableExtra")
library("png")
library("kableExtra")
install.packages('png')
library("png")
#load the data
data <- data.frame(read.csv(file = 'data/data.csv'))
data_w_genres <- data.frame(read.csv(file = 'data/data_w_genres.csv'))
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram(binwidth=100) +
labs(title= 'Count of songs based on their popularity score') +
theme(plot.title = element_text(hjust = 0.5))
popularity_hist
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram(binwidth=1) +
labs(title= 'Count of songs based on their popularity score') +
theme(plot.title = element_text(hjust = 0.5))
popularity_hist
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram(binwidth=5) +
labs(title= 'Count of songs based on their popularity score') +
theme(plot.title = element_text(hjust = 0.5))
popularity_hist
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram(binwidth=5) +
labs(title= 'Song count based on their popularity score',caption = 'Fig 4.1 Histogram of song counts based on their popularity score') +
theme(plot.title = element_text(hjust = 0.5), plot.caption=element_text(hjust = 0.5))
popularity_hist
data
year_hist <- ggplot(data,aes(x=year))
pairs(data)
data
pairs(data)
data <- data[,-c(2,6,7,13)]
pairs(data)
data
#load the data
data <- data.frame(read.csv(file = 'data/data.csv'))
data
#load the data
data <- data.frame(read.csv(file = 'data/data.csv'))
data <- data[,-c(2,6,7,13,15)]
data_w_genres <- data.frame(read.csv(file = 'data/data_w_genres.csv'))
popularity_hist <- ggplot(data, aes(x=popularity)) + geom_histogram(binwidth=5) +
labs(title= 'Track Count based on their Popularity Score',caption = 'Fig 4.1 Histogram of track counts based on their popularity score') +
theme(plot.title = element_text(hjust = 0.5), plot.caption=element_text(hjust = 0.5))
popularity_hist
year_hist <- ggplot(data,aes(x=year)) +geom_histogram(binwidth=5) +
labs(title = 'Number of Tracks released by Year', caption='Fig 4.2 Histogram of track counts by year') +
theme(plot.title = element_text(hjust = 0.5), plot.caption=element_text(hjust = 0.5))
year_hist
data
pairs(data)
data
pairs(~ acousticness + danceability + duration_ms, data = data)
pairs(data)
knitr::opts_chunk$set(echo = TRUE)
pairs(~ acousticness + danceability + energy + instrumentalness + liveness + loudness + popularity + speechiness + valence, data)
knitr::opts_chunk$set(echo = TRUE)
#load the data
data <- data.frame(read.csv(file = 'data/data.csv'))
data_w_genres <- data.frame(read.csv(file = 'data/data_w_genres.csv'))
data_w_genres %>% view()
library(tidyverse)
data_w_genres %>% view()
ggplot(data, aes(x=valence,y=popularity)) + geom_point()
cor_vals <- cors(data)
cor_vals <- cor(data)
cor_vals <- cor(data)
#load the data
data <- data.frame(read.csv(file = 'data/data.csv'))
data <- data[,-c(2,6,7,13,15)]
data_w_genres <- data.frame(read.csv(file = 'data/data_w_genres.csv'))
cor_vals <- cor(data)
round(cor_vals, 2)
cor_vals <- cor(data)
kable(round(cor_vals, 2))
library(kableExtra)
library(png)
library(ggplot2)
cor_vals <- cor(data)
kable(round(cor_vals, 2))
library(kableExtra)
library(png)
library(ggplot2)
library(corrplot)
corrplot(data, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
corrplot(data, order = "hclust",
tl.col = "black", tl.srt = 45)
corrplot(data,
tl.col = "black", tl.srt = 45)
corrplot(data, tl.col = "black", tl.srt = 45)
kable(round(cor_vals, 2), main="Correlation Values between each Predictor Variable")
corrplot(data)
corrplot(cor_vals)
var_table <- read.csv(file = 'variable_table.csv',header=TRUE)
var_table1 <- data.frame(var_table[,-c(2,4,5)])
var_table1$x <- seq(1,17)
var_table1 <- var_table1[,c(3,1,2)]
kable(var_table1, booktabs=TRUE)  %>%
column_spec(3, width = "12cm")
devtools::install_github("vsimko/corrplot")
devtools::install_github("vsimko/corrplot")
corrplot(cor_vals, title = 'Correlation Plot for Predictor Variables')
corrplot(cor_vals, title = 'Correlation Plot for Predictor Variables', tl.offset = 0.4)
corrplot(cor_vals, title = 'Correlation Plot for Predictor Variables', diag=TRUE)
cor_vals <- cor(data)
corrplot(cor_vals, title = 'Correlation Plot for Predictor Variables', diag=TRUE)
library(tidyverse)
library(zoo)
chest_wrist <- readRDS("chest_and_wrist.Rds")
setwd("~/Desktop/STA440/STA440_case_study_2")
chest_wrist <- chest_wrist %>%
mutate(inhale = case_when(Resp > 0 ~ Resp,
TRUE ~ NA_real_),
exhale = case_when(Resp < 0 ~ Resp,
TRUE ~ NA_real_))
chest_wrist <- readRDS("chest_and_wrist.Rds")
chest_wrist <- chest_wrist %>%
mutate(inhale = case_when(Resp > 0 ~ Resp,
TRUE ~ NA_real_),
exhale = case_when(Resp < 0 ~ Resp,
TRUE ~ NA_real_))
subject_p
chest_wrist
chest_wrist %>% view()
